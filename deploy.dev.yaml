apiVersion: v1
kind: Service
metadata:
  name: kafka-connect
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  selector:
    app: kafka-connect
  ports:
    - name: http
      port: 8083
      targetPort: 8083
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect-deployment
spec:
  selector:
    matchLabels:
      app: kafka-connect
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
        - name: kafka-connect
          image: docker.pkg.github.com/batchcorp/kafka-sink-connector/connect:latest
          ports:
            - containerPort: 8083
          env:
            - name: ENV_NAME
              value: "dev"
            - name: GROUP_ID
              value: "1"
            - name: CONFIG_STORAGE_TOPIC
              value: "connect-sandbox-configs"
            - name: OFFSET_STORAGE_TOPIC
              value: "connect-sandbox-offsets"
            - name: STATUS_STORAGE_TOPIC
              value: "connect-sandbox-status"
            - name: BOOTSTRAP_SERVERS
              value: "b-1.sandbox.5oabwj.c2.kafka.us-west-2.amazonaws.com:9094,b-2.sandbox.5oabwj.c2.kafka.us-west-2.amazonaws.com:9094,b-3.sandbox.5oabwj.c2.kafka.us-west-2.amazonaws.com:9094"
            - name: REST_HOST_NAME
              value: "0.0.0.0"
            - name: CONNECT_CONSUMER_SECURITY_PROTOCOL
              value: "SSL"
            - name: CONNECT_SECURITY_PROTOCOL
              value: "SSL"
            - name: HEAP_OPTS
              value: "-Xmx3G -Xms3G"
          resources:
            requests:
              memory: "3000Mi"
              cpu: "2000m"
            limits:
              memory: "5000Mi"
              cpu: "4000m"
          livenessProbe:
            httpGet:
              path: /
              port: 8083
            initialDelaySeconds: 30
            periodSeconds: 5
      imagePullSecrets:
        - name: regcred
